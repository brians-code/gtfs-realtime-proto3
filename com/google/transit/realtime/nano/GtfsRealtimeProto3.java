// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.google.transit.realtime.nano;

@SuppressWarnings("hiding")
public interface GtfsRealtimeProto3 {

  public static final class FeedMessage extends
      com.google.protobuf.nano.MessageNano {

    private static volatile FeedMessage[] _emptyArray;
    public static FeedMessage[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new FeedMessage[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional .transit_realtime.FeedHeader header = 1;
    public com.google.transit.realtime.nano.GtfsRealtimeProto3.FeedHeader header;

    // repeated .transit_realtime.FeedEntity entity = 2;
    public com.google.transit.realtime.nano.GtfsRealtimeProto3.FeedEntity[] entity;

    public FeedMessage() {
      clear();
    }

    public FeedMessage clear() {
      header = null;
      entity = com.google.transit.realtime.nano.GtfsRealtimeProto3.FeedEntity.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.header != null) {
        output.writeMessage(1, this.header);
      }
      if (this.entity != null && this.entity.length > 0) {
        for (int i = 0; i < this.entity.length; i++) {
          com.google.transit.realtime.nano.GtfsRealtimeProto3.FeedEntity element = this.entity[i];
          if (element != null) {
            output.writeMessage(2, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.header != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(1, this.header);
      }
      if (this.entity != null && this.entity.length > 0) {
        for (int i = 0; i < this.entity.length; i++) {
          com.google.transit.realtime.nano.GtfsRealtimeProto3.FeedEntity element = this.entity[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(2, element);
          }
        }
      }
      return size;
    }

    @Override
    public FeedMessage mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            if (this.header == null) {
              this.header = new com.google.transit.realtime.nano.GtfsRealtimeProto3.FeedHeader();
            }
            input.readMessage(this.header);
            break;
          }
          case 18: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 18);
            int i = this.entity == null ? 0 : this.entity.length;
            com.google.transit.realtime.nano.GtfsRealtimeProto3.FeedEntity[] newArray =
                new com.google.transit.realtime.nano.GtfsRealtimeProto3.FeedEntity[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.entity, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.google.transit.realtime.nano.GtfsRealtimeProto3.FeedEntity();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.google.transit.realtime.nano.GtfsRealtimeProto3.FeedEntity();
            input.readMessage(newArray[i]);
            this.entity = newArray;
            break;
          }
        }
      }
    }

    public static FeedMessage parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new FeedMessage(), data);
    }

    public static FeedMessage parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new FeedMessage().mergeFrom(input);
    }
  }

  public static final class FeedHeader extends
      com.google.protobuf.nano.MessageNano {

    // enum Incrementality
    public static final int FULL_DATASET = 0;
    public static final int DIFFERENTIAL = 1;

    private static volatile FeedHeader[] _emptyArray;
    public static FeedHeader[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new FeedHeader[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string gtfs_realtime_version = 1;
    public java.lang.String gtfsRealtimeVersion;

    // optional .transit_realtime.FeedHeader.Incrementality incrementality = 2;
    public int incrementality;

    // optional uint64 timestamp = 3;
    public long timestamp;

    public FeedHeader() {
      clear();
    }

    public FeedHeader clear() {
      gtfsRealtimeVersion = "";
      incrementality = com.google.transit.realtime.nano.GtfsRealtimeProto3.FeedHeader.FULL_DATASET;
      timestamp = 0L;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.gtfsRealtimeVersion.equals("")) {
        output.writeString(1, this.gtfsRealtimeVersion);
      }
      if (this.incrementality != com.google.transit.realtime.nano.GtfsRealtimeProto3.FeedHeader.FULL_DATASET) {
        output.writeInt32(2, this.incrementality);
      }
      if (this.timestamp != 0L) {
        output.writeUInt64(3, this.timestamp);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.gtfsRealtimeVersion.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.gtfsRealtimeVersion);
      }
      if (this.incrementality != com.google.transit.realtime.nano.GtfsRealtimeProto3.FeedHeader.FULL_DATASET) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(2, this.incrementality);
      }
      if (this.timestamp != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(3, this.timestamp);
      }
      return size;
    }

    @Override
    public FeedHeader mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.gtfsRealtimeVersion = input.readString();
            break;
          }
          case 16: {
            int value = input.readInt32();
            switch (value) {
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.FeedHeader.FULL_DATASET:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.FeedHeader.DIFFERENTIAL:
                this.incrementality = value;
                break;
            }
            break;
          }
          case 24: {
            this.timestamp = input.readUInt64();
            break;
          }
        }
      }
    }

    public static FeedHeader parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new FeedHeader(), data);
    }

    public static FeedHeader parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new FeedHeader().mergeFrom(input);
    }
  }

  public static final class FeedEntity extends
      com.google.protobuf.nano.MessageNano {

    private static volatile FeedEntity[] _emptyArray;
    public static FeedEntity[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new FeedEntity[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string id = 1;
    public java.lang.String id;

    // optional bool is_deleted = 2;
    public boolean isDeleted;

    // optional .transit_realtime.TripUpdate trip_update = 3;
    public com.google.transit.realtime.nano.GtfsRealtimeProto3.TripUpdate tripUpdate;

    // optional .transit_realtime.VehiclePosition vehicle = 4;
    public com.google.transit.realtime.nano.GtfsRealtimeProto3.VehiclePosition vehicle;

    // optional .transit_realtime.Alert alert = 5;
    public com.google.transit.realtime.nano.GtfsRealtimeProto3.Alert alert;

    public FeedEntity() {
      clear();
    }

    public FeedEntity clear() {
      id = "";
      isDeleted = false;
      tripUpdate = null;
      vehicle = null;
      alert = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.id.equals("")) {
        output.writeString(1, this.id);
      }
      if (this.isDeleted != false) {
        output.writeBool(2, this.isDeleted);
      }
      if (this.tripUpdate != null) {
        output.writeMessage(3, this.tripUpdate);
      }
      if (this.vehicle != null) {
        output.writeMessage(4, this.vehicle);
      }
      if (this.alert != null) {
        output.writeMessage(5, this.alert);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.id.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.id);
      }
      if (this.isDeleted != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(2, this.isDeleted);
      }
      if (this.tripUpdate != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(3, this.tripUpdate);
      }
      if (this.vehicle != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(4, this.vehicle);
      }
      if (this.alert != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(5, this.alert);
      }
      return size;
    }

    @Override
    public FeedEntity mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.id = input.readString();
            break;
          }
          case 16: {
            this.isDeleted = input.readBool();
            break;
          }
          case 26: {
            if (this.tripUpdate == null) {
              this.tripUpdate = new com.google.transit.realtime.nano.GtfsRealtimeProto3.TripUpdate();
            }
            input.readMessage(this.tripUpdate);
            break;
          }
          case 34: {
            if (this.vehicle == null) {
              this.vehicle = new com.google.transit.realtime.nano.GtfsRealtimeProto3.VehiclePosition();
            }
            input.readMessage(this.vehicle);
            break;
          }
          case 42: {
            if (this.alert == null) {
              this.alert = new com.google.transit.realtime.nano.GtfsRealtimeProto3.Alert();
            }
            input.readMessage(this.alert);
            break;
          }
        }
      }
    }

    public static FeedEntity parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new FeedEntity(), data);
    }

    public static FeedEntity parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new FeedEntity().mergeFrom(input);
    }
  }

  public static final class TripUpdate extends
      com.google.protobuf.nano.MessageNano {

    public static final class StopTimeEvent extends
        com.google.protobuf.nano.MessageNano {

      private static volatile StopTimeEvent[] _emptyArray;
      public static StopTimeEvent[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new StopTimeEvent[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional int32 delay = 1;
      public int delay;

      // optional int64 time = 2;
      public long time;

      // optional int32 uncertainty = 3;
      public int uncertainty;

      public StopTimeEvent() {
        clear();
      }

      public StopTimeEvent clear() {
        delay = 0;
        time = 0L;
        uncertainty = 0;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (this.delay != 0) {
          output.writeInt32(1, this.delay);
        }
        if (this.time != 0L) {
          output.writeInt64(2, this.time);
        }
        if (this.uncertainty != 0) {
          output.writeInt32(3, this.uncertainty);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (this.delay != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(1, this.delay);
        }
        if (this.time != 0L) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt64Size(2, this.time);
        }
        if (this.uncertainty != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(3, this.uncertainty);
        }
        return size;
      }

      @Override
      public StopTimeEvent mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              this.delay = input.readInt32();
              break;
            }
            case 16: {
              this.time = input.readInt64();
              break;
            }
            case 24: {
              this.uncertainty = input.readInt32();
              break;
            }
          }
        }
      }

      public static StopTimeEvent parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new StopTimeEvent(), data);
      }

      public static StopTimeEvent parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new StopTimeEvent().mergeFrom(input);
      }
    }

    public static final class StopTimeUpdate extends
        com.google.protobuf.nano.MessageNano {

      // enum ScheduleRelationship
      public static final int SCHEDULED = 0;
      public static final int SKIPPED = 1;
      public static final int NO_DATA = 2;

      private static volatile StopTimeUpdate[] _emptyArray;
      public static StopTimeUpdate[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new StopTimeUpdate[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional uint32 stop_sequence = 1;
      public int stopSequence;

      // optional string stop_id = 4;
      public java.lang.String stopId;

      // optional .transit_realtime.TripUpdate.StopTimeEvent arrival = 2;
      public com.google.transit.realtime.nano.GtfsRealtimeProto3.TripUpdate.StopTimeEvent arrival;

      // optional .transit_realtime.TripUpdate.StopTimeEvent departure = 3;
      public com.google.transit.realtime.nano.GtfsRealtimeProto3.TripUpdate.StopTimeEvent departure;

      // optional .transit_realtime.TripUpdate.StopTimeUpdate.ScheduleRelationship schedule_relationship = 5;
      public int scheduleRelationship;

      public StopTimeUpdate() {
        clear();
      }

      public StopTimeUpdate clear() {
        stopSequence = 0;
        stopId = "";
        arrival = null;
        departure = null;
        scheduleRelationship = com.google.transit.realtime.nano.GtfsRealtimeProto3.TripUpdate.StopTimeUpdate.SCHEDULED;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (this.stopSequence != 0) {
          output.writeUInt32(1, this.stopSequence);
        }
        if (this.arrival != null) {
          output.writeMessage(2, this.arrival);
        }
        if (this.departure != null) {
          output.writeMessage(3, this.departure);
        }
        if (!this.stopId.equals("")) {
          output.writeString(4, this.stopId);
        }
        if (this.scheduleRelationship != com.google.transit.realtime.nano.GtfsRealtimeProto3.TripUpdate.StopTimeUpdate.SCHEDULED) {
          output.writeInt32(5, this.scheduleRelationship);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (this.stopSequence != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt32Size(1, this.stopSequence);
        }
        if (this.arrival != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(2, this.arrival);
        }
        if (this.departure != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(3, this.departure);
        }
        if (!this.stopId.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(4, this.stopId);
        }
        if (this.scheduleRelationship != com.google.transit.realtime.nano.GtfsRealtimeProto3.TripUpdate.StopTimeUpdate.SCHEDULED) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(5, this.scheduleRelationship);
        }
        return size;
      }

      @Override
      public StopTimeUpdate mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              this.stopSequence = input.readUInt32();
              break;
            }
            case 18: {
              if (this.arrival == null) {
                this.arrival = new com.google.transit.realtime.nano.GtfsRealtimeProto3.TripUpdate.StopTimeEvent();
              }
              input.readMessage(this.arrival);
              break;
            }
            case 26: {
              if (this.departure == null) {
                this.departure = new com.google.transit.realtime.nano.GtfsRealtimeProto3.TripUpdate.StopTimeEvent();
              }
              input.readMessage(this.departure);
              break;
            }
            case 34: {
              this.stopId = input.readString();
              break;
            }
            case 40: {
              int value = input.readInt32();
              switch (value) {
                case com.google.transit.realtime.nano.GtfsRealtimeProto3.TripUpdate.StopTimeUpdate.SCHEDULED:
                case com.google.transit.realtime.nano.GtfsRealtimeProto3.TripUpdate.StopTimeUpdate.SKIPPED:
                case com.google.transit.realtime.nano.GtfsRealtimeProto3.TripUpdate.StopTimeUpdate.NO_DATA:
                  this.scheduleRelationship = value;
                  break;
              }
              break;
            }
          }
        }
      }

      public static StopTimeUpdate parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new StopTimeUpdate(), data);
      }

      public static StopTimeUpdate parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new StopTimeUpdate().mergeFrom(input);
      }
    }

    private static volatile TripUpdate[] _emptyArray;
    public static TripUpdate[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new TripUpdate[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional .transit_realtime.TripDescriptor trip = 1;
    public com.google.transit.realtime.nano.GtfsRealtimeProto3.TripDescriptor trip;

    // optional .transit_realtime.VehicleDescriptor vehicle = 3;
    public com.google.transit.realtime.nano.GtfsRealtimeProto3.VehicleDescriptor vehicle;

    // repeated .transit_realtime.TripUpdate.StopTimeUpdate stop_time_update = 2;
    public com.google.transit.realtime.nano.GtfsRealtimeProto3.TripUpdate.StopTimeUpdate[] stopTimeUpdate;

    // optional uint64 timestamp = 4;
    public long timestamp;

    // optional int32 delay = 5;
    public int delay;

    public TripUpdate() {
      clear();
    }

    public TripUpdate clear() {
      trip = null;
      vehicle = null;
      stopTimeUpdate = com.google.transit.realtime.nano.GtfsRealtimeProto3.TripUpdate.StopTimeUpdate.emptyArray();
      timestamp = 0L;
      delay = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.trip != null) {
        output.writeMessage(1, this.trip);
      }
      if (this.stopTimeUpdate != null && this.stopTimeUpdate.length > 0) {
        for (int i = 0; i < this.stopTimeUpdate.length; i++) {
          com.google.transit.realtime.nano.GtfsRealtimeProto3.TripUpdate.StopTimeUpdate element = this.stopTimeUpdate[i];
          if (element != null) {
            output.writeMessage(2, element);
          }
        }
      }
      if (this.vehicle != null) {
        output.writeMessage(3, this.vehicle);
      }
      if (this.timestamp != 0L) {
        output.writeUInt64(4, this.timestamp);
      }
      if (this.delay != 0) {
        output.writeInt32(5, this.delay);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.trip != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(1, this.trip);
      }
      if (this.stopTimeUpdate != null && this.stopTimeUpdate.length > 0) {
        for (int i = 0; i < this.stopTimeUpdate.length; i++) {
          com.google.transit.realtime.nano.GtfsRealtimeProto3.TripUpdate.StopTimeUpdate element = this.stopTimeUpdate[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(2, element);
          }
        }
      }
      if (this.vehicle != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(3, this.vehicle);
      }
      if (this.timestamp != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(4, this.timestamp);
      }
      if (this.delay != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(5, this.delay);
      }
      return size;
    }

    @Override
    public TripUpdate mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            if (this.trip == null) {
              this.trip = new com.google.transit.realtime.nano.GtfsRealtimeProto3.TripDescriptor();
            }
            input.readMessage(this.trip);
            break;
          }
          case 18: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 18);
            int i = this.stopTimeUpdate == null ? 0 : this.stopTimeUpdate.length;
            com.google.transit.realtime.nano.GtfsRealtimeProto3.TripUpdate.StopTimeUpdate[] newArray =
                new com.google.transit.realtime.nano.GtfsRealtimeProto3.TripUpdate.StopTimeUpdate[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.stopTimeUpdate, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.google.transit.realtime.nano.GtfsRealtimeProto3.TripUpdate.StopTimeUpdate();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.google.transit.realtime.nano.GtfsRealtimeProto3.TripUpdate.StopTimeUpdate();
            input.readMessage(newArray[i]);
            this.stopTimeUpdate = newArray;
            break;
          }
          case 26: {
            if (this.vehicle == null) {
              this.vehicle = new com.google.transit.realtime.nano.GtfsRealtimeProto3.VehicleDescriptor();
            }
            input.readMessage(this.vehicle);
            break;
          }
          case 32: {
            this.timestamp = input.readUInt64();
            break;
          }
          case 40: {
            this.delay = input.readInt32();
            break;
          }
        }
      }
    }

    public static TripUpdate parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new TripUpdate(), data);
    }

    public static TripUpdate parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new TripUpdate().mergeFrom(input);
    }
  }

  public static final class VehiclePosition extends
      com.google.protobuf.nano.MessageNano {

    // enum VehicleStopStatus
    public static final int INCOMING_AT = 0;
    public static final int STOPPED_AT = 1;
    public static final int IN_TRANSIT_TO = 2;

    // enum CongestionLevel
    public static final int UNKNOWN_CONGESTION_LEVEL = 0;
    public static final int RUNNING_SMOOTHLY = 1;
    public static final int STOP_AND_GO = 2;
    public static final int CONGESTION = 3;
    public static final int SEVERE_CONGESTION = 4;

    // enum OccupancyStatus
    public static final int EMPTY = 0;
    public static final int MANY_SEATS_AVAILABLE = 1;
    public static final int FEW_SEATS_AVAILABLE = 2;
    public static final int STANDING_ROOM_ONLY = 3;
    public static final int CRUSHED_STANDING_ROOM_ONLY = 4;
    public static final int FULL = 5;
    public static final int NOT_ACCEPTING_PASSENGERS = 6;

    private static volatile VehiclePosition[] _emptyArray;
    public static VehiclePosition[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VehiclePosition[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional .transit_realtime.TripDescriptor trip = 1;
    public com.google.transit.realtime.nano.GtfsRealtimeProto3.TripDescriptor trip;

    // optional .transit_realtime.VehicleDescriptor vehicle = 8;
    public com.google.transit.realtime.nano.GtfsRealtimeProto3.VehicleDescriptor vehicle;

    // optional .transit_realtime.Position position = 2;
    public com.google.transit.realtime.nano.GtfsRealtimeProto3.Position position;

    // optional uint32 current_stop_sequence = 3;
    public int currentStopSequence;

    // optional string stop_id = 7;
    public java.lang.String stopId;

    // optional .transit_realtime.VehiclePosition.VehicleStopStatus current_status = 4;
    public int currentStatus;

    // optional uint64 timestamp = 5;
    public long timestamp;

    // optional .transit_realtime.VehiclePosition.CongestionLevel congestion_level = 6;
    public int congestionLevel;

    // optional .transit_realtime.VehiclePosition.OccupancyStatus occupancy_status = 9;
    public int occupancyStatus;

    public VehiclePosition() {
      clear();
    }

    public VehiclePosition clear() {
      trip = null;
      vehicle = null;
      position = null;
      currentStopSequence = 0;
      stopId = "";
      currentStatus = com.google.transit.realtime.nano.GtfsRealtimeProto3.VehiclePosition.INCOMING_AT;
      timestamp = 0L;
      congestionLevel = com.google.transit.realtime.nano.GtfsRealtimeProto3.VehiclePosition.UNKNOWN_CONGESTION_LEVEL;
      occupancyStatus = com.google.transit.realtime.nano.GtfsRealtimeProto3.VehiclePosition.EMPTY;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.trip != null) {
        output.writeMessage(1, this.trip);
      }
      if (this.position != null) {
        output.writeMessage(2, this.position);
      }
      if (this.currentStopSequence != 0) {
        output.writeUInt32(3, this.currentStopSequence);
      }
      if (this.currentStatus != com.google.transit.realtime.nano.GtfsRealtimeProto3.VehiclePosition.INCOMING_AT) {
        output.writeInt32(4, this.currentStatus);
      }
      if (this.timestamp != 0L) {
        output.writeUInt64(5, this.timestamp);
      }
      if (this.congestionLevel != com.google.transit.realtime.nano.GtfsRealtimeProto3.VehiclePosition.UNKNOWN_CONGESTION_LEVEL) {
        output.writeInt32(6, this.congestionLevel);
      }
      if (!this.stopId.equals("")) {
        output.writeString(7, this.stopId);
      }
      if (this.vehicle != null) {
        output.writeMessage(8, this.vehicle);
      }
      if (this.occupancyStatus != com.google.transit.realtime.nano.GtfsRealtimeProto3.VehiclePosition.EMPTY) {
        output.writeInt32(9, this.occupancyStatus);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.trip != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(1, this.trip);
      }
      if (this.position != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(2, this.position);
      }
      if (this.currentStopSequence != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(3, this.currentStopSequence);
      }
      if (this.currentStatus != com.google.transit.realtime.nano.GtfsRealtimeProto3.VehiclePosition.INCOMING_AT) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(4, this.currentStatus);
      }
      if (this.timestamp != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(5, this.timestamp);
      }
      if (this.congestionLevel != com.google.transit.realtime.nano.GtfsRealtimeProto3.VehiclePosition.UNKNOWN_CONGESTION_LEVEL) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(6, this.congestionLevel);
      }
      if (!this.stopId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(7, this.stopId);
      }
      if (this.vehicle != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(8, this.vehicle);
      }
      if (this.occupancyStatus != com.google.transit.realtime.nano.GtfsRealtimeProto3.VehiclePosition.EMPTY) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(9, this.occupancyStatus);
      }
      return size;
    }

    @Override
    public VehiclePosition mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            if (this.trip == null) {
              this.trip = new com.google.transit.realtime.nano.GtfsRealtimeProto3.TripDescriptor();
            }
            input.readMessage(this.trip);
            break;
          }
          case 18: {
            if (this.position == null) {
              this.position = new com.google.transit.realtime.nano.GtfsRealtimeProto3.Position();
            }
            input.readMessage(this.position);
            break;
          }
          case 24: {
            this.currentStopSequence = input.readUInt32();
            break;
          }
          case 32: {
            int value = input.readInt32();
            switch (value) {
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.VehiclePosition.INCOMING_AT:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.VehiclePosition.STOPPED_AT:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.VehiclePosition.IN_TRANSIT_TO:
                this.currentStatus = value;
                break;
            }
            break;
          }
          case 40: {
            this.timestamp = input.readUInt64();
            break;
          }
          case 48: {
            int value = input.readInt32();
            switch (value) {
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.VehiclePosition.UNKNOWN_CONGESTION_LEVEL:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.VehiclePosition.RUNNING_SMOOTHLY:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.VehiclePosition.STOP_AND_GO:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.VehiclePosition.CONGESTION:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.VehiclePosition.SEVERE_CONGESTION:
                this.congestionLevel = value;
                break;
            }
            break;
          }
          case 58: {
            this.stopId = input.readString();
            break;
          }
          case 66: {
            if (this.vehicle == null) {
              this.vehicle = new com.google.transit.realtime.nano.GtfsRealtimeProto3.VehicleDescriptor();
            }
            input.readMessage(this.vehicle);
            break;
          }
          case 72: {
            int value = input.readInt32();
            switch (value) {
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.VehiclePosition.EMPTY:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.VehiclePosition.MANY_SEATS_AVAILABLE:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.VehiclePosition.FEW_SEATS_AVAILABLE:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.VehiclePosition.STANDING_ROOM_ONLY:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.VehiclePosition.CRUSHED_STANDING_ROOM_ONLY:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.VehiclePosition.FULL:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.VehiclePosition.NOT_ACCEPTING_PASSENGERS:
                this.occupancyStatus = value;
                break;
            }
            break;
          }
        }
      }
    }

    public static VehiclePosition parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VehiclePosition(), data);
    }

    public static VehiclePosition parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VehiclePosition().mergeFrom(input);
    }
  }

  public static final class Alert extends
      com.google.protobuf.nano.MessageNano {

    // enum Cause
    public static final int PROTO3_DEFAULT_CAUSE = 0;
    public static final int UNKNOWN_CAUSE = 1;
    public static final int OTHER_CAUSE = 2;
    public static final int TECHNICAL_PROBLEM = 3;
    public static final int STRIKE = 4;
    public static final int DEMONSTRATION = 5;
    public static final int ACCIDENT = 6;
    public static final int HOLIDAY = 7;
    public static final int WEATHER = 8;
    public static final int MAINTENANCE = 9;
    public static final int CONSTRUCTION = 10;
    public static final int POLICE_ACTIVITY = 11;
    public static final int MEDICAL_EMERGENCY = 12;

    // enum Effect
    public static final int PROTO3_DEFAULT_EFFECT = 0;
    public static final int NO_SERVICE = 1;
    public static final int REDUCED_SERVICE = 2;
    public static final int SIGNIFICANT_DELAYS = 3;
    public static final int DETOUR = 4;
    public static final int ADDITIONAL_SERVICE = 5;
    public static final int MODIFIED_SERVICE = 6;
    public static final int OTHER_EFFECT = 7;
    public static final int UNKNOWN_EFFECT = 8;
    public static final int STOP_MOVED = 9;

    private static volatile Alert[] _emptyArray;
    public static Alert[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Alert[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .transit_realtime.TimeRange active_period = 1;
    public com.google.transit.realtime.nano.GtfsRealtimeProto3.TimeRange[] activePeriod;

    // repeated .transit_realtime.EntitySelector informed_entity = 5;
    public com.google.transit.realtime.nano.GtfsRealtimeProto3.EntitySelector[] informedEntity;

    // optional .transit_realtime.Alert.Cause cause = 6;
    public int cause;

    // optional .transit_realtime.Alert.Effect effect = 7;
    public int effect;

    // optional .transit_realtime.TranslatedString url = 8;
    public com.google.transit.realtime.nano.GtfsRealtimeProto3.TranslatedString url;

    // optional .transit_realtime.TranslatedString header_text = 10;
    public com.google.transit.realtime.nano.GtfsRealtimeProto3.TranslatedString headerText;

    // optional .transit_realtime.TranslatedString description_text = 11;
    public com.google.transit.realtime.nano.GtfsRealtimeProto3.TranslatedString descriptionText;

    public Alert() {
      clear();
    }

    public Alert clear() {
      activePeriod = com.google.transit.realtime.nano.GtfsRealtimeProto3.TimeRange.emptyArray();
      informedEntity = com.google.transit.realtime.nano.GtfsRealtimeProto3.EntitySelector.emptyArray();
      cause = com.google.transit.realtime.nano.GtfsRealtimeProto3.Alert.PROTO3_DEFAULT_CAUSE;
      effect = com.google.transit.realtime.nano.GtfsRealtimeProto3.Alert.PROTO3_DEFAULT_EFFECT;
      url = null;
      headerText = null;
      descriptionText = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.activePeriod != null && this.activePeriod.length > 0) {
        for (int i = 0; i < this.activePeriod.length; i++) {
          com.google.transit.realtime.nano.GtfsRealtimeProto3.TimeRange element = this.activePeriod[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      if (this.informedEntity != null && this.informedEntity.length > 0) {
        for (int i = 0; i < this.informedEntity.length; i++) {
          com.google.transit.realtime.nano.GtfsRealtimeProto3.EntitySelector element = this.informedEntity[i];
          if (element != null) {
            output.writeMessage(5, element);
          }
        }
      }
      if (this.cause != com.google.transit.realtime.nano.GtfsRealtimeProto3.Alert.PROTO3_DEFAULT_CAUSE) {
        output.writeInt32(6, this.cause);
      }
      if (this.effect != com.google.transit.realtime.nano.GtfsRealtimeProto3.Alert.PROTO3_DEFAULT_EFFECT) {
        output.writeInt32(7, this.effect);
      }
      if (this.url != null) {
        output.writeMessage(8, this.url);
      }
      if (this.headerText != null) {
        output.writeMessage(10, this.headerText);
      }
      if (this.descriptionText != null) {
        output.writeMessage(11, this.descriptionText);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.activePeriod != null && this.activePeriod.length > 0) {
        for (int i = 0; i < this.activePeriod.length; i++) {
          com.google.transit.realtime.nano.GtfsRealtimeProto3.TimeRange element = this.activePeriod[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      if (this.informedEntity != null && this.informedEntity.length > 0) {
        for (int i = 0; i < this.informedEntity.length; i++) {
          com.google.transit.realtime.nano.GtfsRealtimeProto3.EntitySelector element = this.informedEntity[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(5, element);
          }
        }
      }
      if (this.cause != com.google.transit.realtime.nano.GtfsRealtimeProto3.Alert.PROTO3_DEFAULT_CAUSE) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(6, this.cause);
      }
      if (this.effect != com.google.transit.realtime.nano.GtfsRealtimeProto3.Alert.PROTO3_DEFAULT_EFFECT) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(7, this.effect);
      }
      if (this.url != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(8, this.url);
      }
      if (this.headerText != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(10, this.headerText);
      }
      if (this.descriptionText != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(11, this.descriptionText);
      }
      return size;
    }

    @Override
    public Alert mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.activePeriod == null ? 0 : this.activePeriod.length;
            com.google.transit.realtime.nano.GtfsRealtimeProto3.TimeRange[] newArray =
                new com.google.transit.realtime.nano.GtfsRealtimeProto3.TimeRange[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.activePeriod, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.google.transit.realtime.nano.GtfsRealtimeProto3.TimeRange();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.google.transit.realtime.nano.GtfsRealtimeProto3.TimeRange();
            input.readMessage(newArray[i]);
            this.activePeriod = newArray;
            break;
          }
          case 42: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 42);
            int i = this.informedEntity == null ? 0 : this.informedEntity.length;
            com.google.transit.realtime.nano.GtfsRealtimeProto3.EntitySelector[] newArray =
                new com.google.transit.realtime.nano.GtfsRealtimeProto3.EntitySelector[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.informedEntity, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.google.transit.realtime.nano.GtfsRealtimeProto3.EntitySelector();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.google.transit.realtime.nano.GtfsRealtimeProto3.EntitySelector();
            input.readMessage(newArray[i]);
            this.informedEntity = newArray;
            break;
          }
          case 48: {
            int value = input.readInt32();
            switch (value) {
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.Alert.PROTO3_DEFAULT_CAUSE:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.Alert.UNKNOWN_CAUSE:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.Alert.OTHER_CAUSE:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.Alert.TECHNICAL_PROBLEM:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.Alert.STRIKE:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.Alert.DEMONSTRATION:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.Alert.ACCIDENT:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.Alert.HOLIDAY:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.Alert.WEATHER:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.Alert.MAINTENANCE:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.Alert.CONSTRUCTION:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.Alert.POLICE_ACTIVITY:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.Alert.MEDICAL_EMERGENCY:
                this.cause = value;
                break;
            }
            break;
          }
          case 56: {
            int value = input.readInt32();
            switch (value) {
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.Alert.PROTO3_DEFAULT_EFFECT:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.Alert.NO_SERVICE:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.Alert.REDUCED_SERVICE:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.Alert.SIGNIFICANT_DELAYS:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.Alert.DETOUR:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.Alert.ADDITIONAL_SERVICE:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.Alert.MODIFIED_SERVICE:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.Alert.OTHER_EFFECT:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.Alert.UNKNOWN_EFFECT:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.Alert.STOP_MOVED:
                this.effect = value;
                break;
            }
            break;
          }
          case 66: {
            if (this.url == null) {
              this.url = new com.google.transit.realtime.nano.GtfsRealtimeProto3.TranslatedString();
            }
            input.readMessage(this.url);
            break;
          }
          case 82: {
            if (this.headerText == null) {
              this.headerText = new com.google.transit.realtime.nano.GtfsRealtimeProto3.TranslatedString();
            }
            input.readMessage(this.headerText);
            break;
          }
          case 90: {
            if (this.descriptionText == null) {
              this.descriptionText = new com.google.transit.realtime.nano.GtfsRealtimeProto3.TranslatedString();
            }
            input.readMessage(this.descriptionText);
            break;
          }
        }
      }
    }

    public static Alert parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Alert(), data);
    }

    public static Alert parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Alert().mergeFrom(input);
    }
  }

  public static final class TimeRange extends
      com.google.protobuf.nano.MessageNano {

    private static volatile TimeRange[] _emptyArray;
    public static TimeRange[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new TimeRange[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional uint64 start = 1;
    public long start;

    // optional uint64 end = 2;
    public long end;

    public TimeRange() {
      clear();
    }

    public TimeRange clear() {
      start = 0L;
      end = 0L;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.start != 0L) {
        output.writeUInt64(1, this.start);
      }
      if (this.end != 0L) {
        output.writeUInt64(2, this.end);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.start != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(1, this.start);
      }
      if (this.end != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(2, this.end);
      }
      return size;
    }

    @Override
    public TimeRange mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.start = input.readUInt64();
            break;
          }
          case 16: {
            this.end = input.readUInt64();
            break;
          }
        }
      }
    }

    public static TimeRange parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new TimeRange(), data);
    }

    public static TimeRange parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new TimeRange().mergeFrom(input);
    }
  }

  public static final class Position extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Position[] _emptyArray;
    public static Position[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Position[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional float latitude = 1;
    public float latitude;

    // optional float longitude = 2;
    public float longitude;

    // optional float bearing = 3;
    public float bearing;

    // optional double odometer = 4;
    public double odometer;

    // optional float speed = 5;
    public float speed;

    public Position() {
      clear();
    }

    public Position clear() {
      latitude = 0F;
      longitude = 0F;
      bearing = 0F;
      odometer = 0D;
      speed = 0F;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (java.lang.Float.floatToIntBits(this.latitude)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(1, this.latitude);
      }
      if (java.lang.Float.floatToIntBits(this.longitude)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(2, this.longitude);
      }
      if (java.lang.Float.floatToIntBits(this.bearing)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(3, this.bearing);
      }
      if (java.lang.Double.doubleToLongBits(this.odometer)
          != java.lang.Double.doubleToLongBits(0D)) {
        output.writeDouble(4, this.odometer);
      }
      if (java.lang.Float.floatToIntBits(this.speed)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(5, this.speed);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (java.lang.Float.floatToIntBits(this.latitude)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(1, this.latitude);
      }
      if (java.lang.Float.floatToIntBits(this.longitude)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(2, this.longitude);
      }
      if (java.lang.Float.floatToIntBits(this.bearing)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(3, this.bearing);
      }
      if (java.lang.Double.doubleToLongBits(this.odometer)
          != java.lang.Double.doubleToLongBits(0D)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeDoubleSize(4, this.odometer);
      }
      if (java.lang.Float.floatToIntBits(this.speed)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(5, this.speed);
      }
      return size;
    }

    @Override
    public Position mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 13: {
            this.latitude = input.readFloat();
            break;
          }
          case 21: {
            this.longitude = input.readFloat();
            break;
          }
          case 29: {
            this.bearing = input.readFloat();
            break;
          }
          case 33: {
            this.odometer = input.readDouble();
            break;
          }
          case 45: {
            this.speed = input.readFloat();
            break;
          }
        }
      }
    }

    public static Position parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Position(), data);
    }

    public static Position parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Position().mergeFrom(input);
    }
  }

  public static final class TripDescriptor extends
      com.google.protobuf.nano.MessageNano {

    // enum ScheduleRelationship
    public static final int SCHEDULED = 0;
    public static final int ADDED = 1;
    public static final int UNSCHEDULED = 2;
    public static final int CANCELED = 3;

    private static volatile TripDescriptor[] _emptyArray;
    public static TripDescriptor[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new TripDescriptor[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string trip_id = 1;
    public java.lang.String tripId;

    // optional string route_id = 5;
    public java.lang.String routeId;

    // optional uint32 direction_id = 6;
    public int directionId;

    // optional string start_time = 2;
    public java.lang.String startTime;

    // optional string start_date = 3;
    public java.lang.String startDate;

    // optional .transit_realtime.TripDescriptor.ScheduleRelationship schedule_relationship = 4;
    public int scheduleRelationship;

    public TripDescriptor() {
      clear();
    }

    public TripDescriptor clear() {
      tripId = "";
      routeId = "";
      directionId = 0;
      startTime = "";
      startDate = "";
      scheduleRelationship = com.google.transit.realtime.nano.GtfsRealtimeProto3.TripDescriptor.SCHEDULED;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.tripId.equals("")) {
        output.writeString(1, this.tripId);
      }
      if (!this.startTime.equals("")) {
        output.writeString(2, this.startTime);
      }
      if (!this.startDate.equals("")) {
        output.writeString(3, this.startDate);
      }
      if (this.scheduleRelationship != com.google.transit.realtime.nano.GtfsRealtimeProto3.TripDescriptor.SCHEDULED) {
        output.writeInt32(4, this.scheduleRelationship);
      }
      if (!this.routeId.equals("")) {
        output.writeString(5, this.routeId);
      }
      if (this.directionId != 0) {
        output.writeUInt32(6, this.directionId);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.tripId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.tripId);
      }
      if (!this.startTime.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.startTime);
      }
      if (!this.startDate.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.startDate);
      }
      if (this.scheduleRelationship != com.google.transit.realtime.nano.GtfsRealtimeProto3.TripDescriptor.SCHEDULED) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(4, this.scheduleRelationship);
      }
      if (!this.routeId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.routeId);
      }
      if (this.directionId != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(6, this.directionId);
      }
      return size;
    }

    @Override
    public TripDescriptor mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.tripId = input.readString();
            break;
          }
          case 18: {
            this.startTime = input.readString();
            break;
          }
          case 26: {
            this.startDate = input.readString();
            break;
          }
          case 32: {
            int value = input.readInt32();
            switch (value) {
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.TripDescriptor.SCHEDULED:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.TripDescriptor.ADDED:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.TripDescriptor.UNSCHEDULED:
              case com.google.transit.realtime.nano.GtfsRealtimeProto3.TripDescriptor.CANCELED:
                this.scheduleRelationship = value;
                break;
            }
            break;
          }
          case 42: {
            this.routeId = input.readString();
            break;
          }
          case 48: {
            this.directionId = input.readUInt32();
            break;
          }
        }
      }
    }

    public static TripDescriptor parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new TripDescriptor(), data);
    }

    public static TripDescriptor parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new TripDescriptor().mergeFrom(input);
    }
  }

  public static final class VehicleDescriptor extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VehicleDescriptor[] _emptyArray;
    public static VehicleDescriptor[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VehicleDescriptor[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string id = 1;
    public java.lang.String id;

    // optional string label = 2;
    public java.lang.String label;

    // optional string license_plate = 3;
    public java.lang.String licensePlate;

    public VehicleDescriptor() {
      clear();
    }

    public VehicleDescriptor clear() {
      id = "";
      label = "";
      licensePlate = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.id.equals("")) {
        output.writeString(1, this.id);
      }
      if (!this.label.equals("")) {
        output.writeString(2, this.label);
      }
      if (!this.licensePlate.equals("")) {
        output.writeString(3, this.licensePlate);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.id.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.id);
      }
      if (!this.label.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.label);
      }
      if (!this.licensePlate.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.licensePlate);
      }
      return size;
    }

    @Override
    public VehicleDescriptor mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.id = input.readString();
            break;
          }
          case 18: {
            this.label = input.readString();
            break;
          }
          case 26: {
            this.licensePlate = input.readString();
            break;
          }
        }
      }
    }

    public static VehicleDescriptor parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VehicleDescriptor(), data);
    }

    public static VehicleDescriptor parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VehicleDescriptor().mergeFrom(input);
    }
  }

  public static final class EntitySelector extends
      com.google.protobuf.nano.MessageNano {

    private static volatile EntitySelector[] _emptyArray;
    public static EntitySelector[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new EntitySelector[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string agency_id = 1;
    public java.lang.String agencyId;

    // optional string route_id = 2;
    public java.lang.String routeId;

    // optional int32 route_type = 3;
    public int routeType;

    // optional .transit_realtime.TripDescriptor trip = 4;
    public com.google.transit.realtime.nano.GtfsRealtimeProto3.TripDescriptor trip;

    // optional string stop_id = 5;
    public java.lang.String stopId;

    public EntitySelector() {
      clear();
    }

    public EntitySelector clear() {
      agencyId = "";
      routeId = "";
      routeType = 0;
      trip = null;
      stopId = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.agencyId.equals("")) {
        output.writeString(1, this.agencyId);
      }
      if (!this.routeId.equals("")) {
        output.writeString(2, this.routeId);
      }
      if (this.routeType != 0) {
        output.writeInt32(3, this.routeType);
      }
      if (this.trip != null) {
        output.writeMessage(4, this.trip);
      }
      if (!this.stopId.equals("")) {
        output.writeString(5, this.stopId);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.agencyId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.agencyId);
      }
      if (!this.routeId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.routeId);
      }
      if (this.routeType != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(3, this.routeType);
      }
      if (this.trip != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(4, this.trip);
      }
      if (!this.stopId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.stopId);
      }
      return size;
    }

    @Override
    public EntitySelector mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.agencyId = input.readString();
            break;
          }
          case 18: {
            this.routeId = input.readString();
            break;
          }
          case 24: {
            this.routeType = input.readInt32();
            break;
          }
          case 34: {
            if (this.trip == null) {
              this.trip = new com.google.transit.realtime.nano.GtfsRealtimeProto3.TripDescriptor();
            }
            input.readMessage(this.trip);
            break;
          }
          case 42: {
            this.stopId = input.readString();
            break;
          }
        }
      }
    }

    public static EntitySelector parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new EntitySelector(), data);
    }

    public static EntitySelector parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new EntitySelector().mergeFrom(input);
    }
  }

  public static final class TranslatedString extends
      com.google.protobuf.nano.MessageNano {

    public static final class Translation extends
        com.google.protobuf.nano.MessageNano {

      private static volatile Translation[] _emptyArray;
      public static Translation[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new Translation[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional string text = 1;
      public java.lang.String text;

      // optional string language = 2;
      public java.lang.String language;

      public Translation() {
        clear();
      }

      public Translation clear() {
        text = "";
        language = "";
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (!this.text.equals("")) {
          output.writeString(1, this.text);
        }
        if (!this.language.equals("")) {
          output.writeString(2, this.language);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (!this.text.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(1, this.text);
        }
        if (!this.language.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(2, this.language);
        }
        return size;
      }

      @Override
      public Translation mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              this.text = input.readString();
              break;
            }
            case 18: {
              this.language = input.readString();
              break;
            }
          }
        }
      }

      public static Translation parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new Translation(), data);
      }

      public static Translation parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new Translation().mergeFrom(input);
      }
    }

    private static volatile TranslatedString[] _emptyArray;
    public static TranslatedString[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new TranslatedString[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .transit_realtime.TranslatedString.Translation translation = 1;
    public com.google.transit.realtime.nano.GtfsRealtimeProto3.TranslatedString.Translation[] translation;

    public TranslatedString() {
      clear();
    }

    public TranslatedString clear() {
      translation = com.google.transit.realtime.nano.GtfsRealtimeProto3.TranslatedString.Translation.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.translation != null && this.translation.length > 0) {
        for (int i = 0; i < this.translation.length; i++) {
          com.google.transit.realtime.nano.GtfsRealtimeProto3.TranslatedString.Translation element = this.translation[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.translation != null && this.translation.length > 0) {
        for (int i = 0; i < this.translation.length; i++) {
          com.google.transit.realtime.nano.GtfsRealtimeProto3.TranslatedString.Translation element = this.translation[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      return size;
    }

    @Override
    public TranslatedString mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.translation == null ? 0 : this.translation.length;
            com.google.transit.realtime.nano.GtfsRealtimeProto3.TranslatedString.Translation[] newArray =
                new com.google.transit.realtime.nano.GtfsRealtimeProto3.TranslatedString.Translation[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.translation, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.google.transit.realtime.nano.GtfsRealtimeProto3.TranslatedString.Translation();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.google.transit.realtime.nano.GtfsRealtimeProto3.TranslatedString.Translation();
            input.readMessage(newArray[i]);
            this.translation = newArray;
            break;
          }
        }
      }
    }

    public static TranslatedString parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new TranslatedString(), data);
    }

    public static TranslatedString parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new TranslatedString().mergeFrom(input);
    }
  }
}
